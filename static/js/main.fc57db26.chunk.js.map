{"version":3,"sources":["components/images/profile.jpg","logo.svg","components/FloatingActionButton.jsx","components/ui/PopoverName.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","margin","spacing","extendedIcon","marginRight","FloatingActionButtonSize","label","classes","Fab","variant","color","aria-label","className","typography","padding","SimplePopover","profile","classImg","React","useState","anchorEl","setAnchorEl","open","Boolean","id","undefined","HtmlTooltip","withStyles","tooltip","backgroundColor","maxWidth","fontSize","pxToRem","border","Tooltip","title","Fragment","Typography","src","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","data","first","last","createMuiTheme","overrides","MuiButton","text","background","borderRadius","height","boxShadow","App","root","flexGrow","page","minHeight","display","flexDirection","alignItems","justifyContent","fade","palette","warning","dark","paper","textAlign","secondary","arrows","borderColor","width","fill","common","white","stroke","divider","strokeWidth","checked","setChecked","handleChange","prev","ThemeProvider","Button","onClick","onMouseEnter","container","Grow","in","elevation","style","timeout","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fc57db26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.8eaa53ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport NavigationIcon from '@material-ui/icons/Navigation';\n\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport  const FloatingActionButtonSize = ({label}) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n        <Fab variant=\"extended\" color=\"primary\" aria-label=\"add\" className={classes.margin}>\n          <NavigationIcon className={classes.extendedIcon} />\n          {label}\n        </Fab>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles , withStyles} from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport const SimplePopover = ({profile, classImg}) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  var target ;\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  const HtmlTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: '#f5f5f9',\n      color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n    },\n  }))(Tooltip);\n\n  return (\n    <div>\n      <HtmlTooltip\n        title={\n          <React.Fragment>\n            <Typography color=\"inherit\">สวัสดีคีรับ</Typography>\n          </React.Fragment>\n        }\n      >\n        <img src={profile} className={classImg} ></img>\n      </HtmlTooltip>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        <Typography className={classes.typography}>สวัสดีคีรับ</Typography>\n      </Popover>\n    </div>\n  );\n}","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport profile from './components/images/profile.jpg'\nimport \"./App.css\";\nimport {FloatingActionButtonSize} from \"./components/FloatingActionButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\"; \nimport Grid from \"@material-ui/core/Grid\";\nimport { fade } from '@material-ui/core/styles/colorManipulator';\n\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\n\nimport Grow from '@material-ui/core/Grow';\n\nimport {SimplePopover} from './components/ui/PopoverName'\n\nconst data = [\n  {\n    first: \"Anurak\",\n    last: \"Khophadung\",\n  },\n];\n\nconst theme = createMuiTheme({\n  overrides: {\n    // Style sheet name ⚛️\n    MuiButton: {\n      // Name of the rule\n      text: {\n        // Some CSS\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        borderRadius: 3,\n        border: 0,\n        color: 'white',\n        height: 48,\n        padding: '0 30px',\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      },\n    },\n  },\n});\n\nfunction App() {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    page:{\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontSize: 'calc(10px + 2vmin)',\n      backgroundColor: fade(theme.palette.warning.dark, 0.6),\n    },\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary\n    },\n    arrows: {\n      color: theme.palette.text.secondary\n    },\n    profile: {\n      height: '30vmin',\n      borderRadius: '50%',\n      border: '1.5vh solid',\n      borderColor: fade(theme.palette.warning.dark, 0.2)\n    },\n    root: {\n      height: 180,\n    },\n    container: {\n      display: 'flex',\n    },\n    svg: {\n      width: 100,\n      height: 100,\n    },\n    polygon: {\n      fill: theme.palette.common.white,\n      stroke: theme.palette.divider,\n      strokeWidth: 1,\n    },\n  }));\n\n  const classes = useStyles();\n\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = () => {\n    setChecked((prev) => !prev);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className={classes.page}>\n        <SimplePopover profile={profile} classImg={classes.profile}></SimplePopover>\n        <ThemeProvider theme={theme}>\n      <Button onClick={handleChange}\n      onMouseEnter={handleChange}\n      ><UnfoldMore className=\"App-logo\" />{data[0].first} {data[0].last}</Button>\n    </ThemeProvider>\n    <div className={classes.container}>\n    <Grow in={checked}>\n          <div elevation={4} className={classes.paper}>\n            \n        <FloatingActionButtonSize label=\"ข้อมูลทั่วไป\"></FloatingActionButtonSize>\n          </div>\n        </Grow>\n        {/* Conditionally applies the timeout prop to change the entry speed. */}\n        <Grow\n          in={checked}\n          style={{ transformOrigin: '0 0 0' }}\n          {...(checked ? { timeout: 1000 } : {})}\n        >\n          <div elevation={4} className={classes.paper}>\n            \n        <FloatingActionButtonSize label=\"การปฏิบัติงาน\"></FloatingActionButtonSize>\n          </div>\n        </Grow>\n        <Grow\n          in={checked}\n          style={{ transformOrigin: '0 0 0' }}\n          {...(checked ? { timeout: 1000 } : {})}\n        >\n          <div elevation={4} className={classes.paper}>\n            \n        <FloatingActionButtonSize label=\"ชั้นเรียนออนไลน์\"></FloatingActionButtonSize>\n          </div>\n        </Grow>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}